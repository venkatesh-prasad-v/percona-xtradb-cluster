--source include/have_debug.inc
--source audit_tables_init.inc
--source include/have_component_keyring_file.inc
--source suite/component_keyring_file/inc/setup_component.inc

--let $audit_filter_log_path = `SELECT @@global.datadir`
--let $audit_filter_log_name = `SELECT @@global.audit_log_filter_file`

# Remove rotated non-encrypted log, it isn't related to the test
--remove_files_wildcard $audit_filter_log_path audit_filter.????????T??????.log

# This generates InnoDB related key, it must not changed in any way by the plugin or influence plugin behavior
ALTER INSTANCE ROTATE INNODB MASTER KEY;

--echo #
--echo # Password which is still being used for some existing log encryption should not be removed
SELECT audit_log_encryption_password_set('pwd1');
SELECT audit_log_encryption_password_set('pwd2');
SELECT audit_log_encryption_password_set('pwd3');
SELECT audit_log_encryption_password_set('pwd4');
SELECT audit_log_encryption_password_set('pwd5');

--replace_regex /INNODBKey-.*/INNODBKey/
SELECT * FROM performance_schema.keyring_keys ORDER BY KEY_ID;

# All passwords are still in use by rotated logs, not any of them gets removed
SET GLOBAL audit_log_filter_password_history_keep_days=3;

--replace_regex /INNODBKey-.*/INNODBKey/
SELECT * FROM performance_schema.keyring_keys ORDER BY KEY_ID;

# Delete rotated logs and set a new password, outdated passwords will be removed
--remove_files_wildcard $audit_filter_log_path audit_filter.????????T??????.log*
SET GLOBAL audit_log_filter_password_history_keep_days=3;

--replace_regex /INNODBKey-.*/INNODBKey/
SELECT * FROM performance_schema.keyring_keys ORDER BY KEY_ID;

--source suite/component_keyring_file/inc/teardown_component.inc

--echo #
--echo # Cleanup
--source audit_tables_cleanup.inc
