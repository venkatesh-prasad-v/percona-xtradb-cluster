CREATE TABLE t1(i INT PRIMARY KEY);
#
# Run ALTER TABLE in NBO mode and verify that it is logged with a proper GTID.
#
SET SESSION wsrep_OSU_method="NBO";
ALTER TABLE t1 ENGINE=InnoDB;
SET SESSION wsrep_OSU_method=default;
include/rpl/deprecated/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
#	#	Gtid	#	#	SET @@SESSION.GTID_NEXT= 'Gtid_set'
#	#	Query	#	#	use `test`; ALTER TABLE t1 ENGINE=InnoDB
include/rpl/assert_binlog_events.inc [Gtid/.*CLUSTER_UUID.* # Query/.*ALTER TABLE.*]
include/rpl/deprecated/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
#	#	Gtid	#	#	SET @@SESSION.GTID_NEXT= 'Gtid_set'
#	#	Query	#	#	use `test`; ALTER TABLE t1 ENGINE=InnoDB
include/rpl/assert_binlog_events.inc [Gtid/.*CLUSTER_UUID.* # Query/.*ALTER TABLE.*]
#
# Assert that Incremental State Transfer succeeds when the binary log has a DDL logged in NBO.
#
INSERT INTO t1 VALUES(1),(2),(3),(4);
CREATE TABLE t2 (j INT PRIMARY KEY);
INSERT INTO t2 VALUES(1),(2),(3),(4);
# restart
#
# Assert that binlog rotation will be successful on both nodes.
#
SET SESSION wsrep_OSU_method="NBO";
ALTER TABLE t1 ENGINE=InnoDB;
SET SESSION wsrep_OSU_method=default;
SET SESSION wsrep_OSU_method="NBO";
ALTER TABLE t1 ENGINE=InnoDB;
SET SESSION wsrep_OSU_method=default;
FLUSH BINARY LOGS;
FLUSH BINARY LOGS;
CALL mtr.add_suppression("no corresponding NBO begin found for NBO end");
CALL mtr.add_suppression("no corresponding NBO begin found for NBO end");
DROP TABLE t1;
DROP TABLE t2;
