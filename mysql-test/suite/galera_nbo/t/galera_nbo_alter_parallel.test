#
# Test that wsrep parallel apply can run two unrelated DDLs at the same time
#

--source include/galera_cluster.inc
--source include/have_debug_sync.inc
--source include/have_debug.inc

--connection node_1
CREATE TABLE t1 (f1 INTEGER NOT NULL) ENGINE=InnoDB;
CREATE TABLE t2 (f1 INTEGER NOT NULL) ENGINE=InnoDB;
CREATE TABLE t3 (f1 INTEGER NOT NULL) ENGINE=InnoDB;

--connection node_2
SET GLOBAL debug = 'd,sync.alter_locked_tables:d,sync.alter_locked_tables_inplace';

--connection node_1
SET SESSION wsrep_osu_method=NBO;
--send ALTER TABLE t1 LOCK=SHARED, ALGORITHM=COPY, ADD PRIMARY KEY (f1);

--connection node_2
SET SESSION wsrep_sync_wait=0;

# Wait for the ALTER to block in sync point
--let $wait_condition = SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.PROCESSLIST WHERE STATE = 'debug sync point: now';
--source include/wait_condition.inc

--connect node_1a, 127.0.0.1, root, , test, $NODE_MYPORT_1
--connection node_1a
SET SESSION wsrep_osu_method=NBO;
--send ALTER TABLE t2 LOCK=SHARED, ALGORITHM=INPLACE, ADD PRIMARY KEY (f1);

--connection node_2

# Wait for the ALTERs to block in sync point
--let $wait_condition = SELECT COUNT(*) = 2 FROM INFORMATION_SCHEMA.PROCESSLIST WHERE STATE = 'debug sync point: now';
--source include/wait_condition.inc

# Check that the processing of unrelated events is not affected
--connect node_1b, 127.0.0.1, root, , test, $NODE_MYPORT_1
--connection node_1b
INSERT INTO t3 VALUES (1);

--connection node_2
--let $wait_condition = SELECT COUNT(*) = 1 FROM t3;
INSERT INTO t3 VALUES (2);

SET DEBUG_SYNC= 'now SIGNAL signal.alter_locked_tables';
SET DEBUG_SYNC= 'now SIGNAL signal.alter_locked_tables_inplace';
SET GLOBAL debug = '';

--let $wait_condition = SELECT COUNT(*) = 0 FROM INFORMATION_SCHEMA.PROCESSLIST WHERE INFO LIKE 'ALTER%';
--source include/wait_condition.inc

--connection node_1
--reap

--connection node_1a
--reap

--connection node_1
SHOW CREATE TABLE t1;
SHOW CREATE TABLE t2;
SELECT COUNT(*) = 2 FROM t3;

--connection node_2
SHOW CREATE TABLE t1;
SHOW CREATE TABLE t2;
SELECT COUNT(*) = 2 FROM t3;

DROP TABLE t1, t2, t3;
