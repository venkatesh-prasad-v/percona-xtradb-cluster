#
# Test that wsrep can process two ALTERs on the same table that are conflicting
#

--source include/galera_cluster.inc
--source include/have_debug_sync.inc
--source include/have_debug.inc

--connection node_2
SET GLOBAL wsrep_slave_threads=2;

--connection node_1
CREATE TABLE t1 (f1 INTEGER NOT NULL, f2 INTEGER NOT NULL) ENGINE=InnoDB;

--connection node_2
SET GLOBAL debug = 'd,sync.alter_locked_tables_inplace';

--connection node_1
SET SESSION wsrep_osu_method=NBO;
--send ALTER TABLE t1 LOCK=SHARED, ADD PRIMARY KEY (f1);

--sleep 5

--connect node_1a, 127.0.0.1, root, , test, $NODE_MYPORT_1
--connection node_1a
SET SESSION wsrep_osu_method=NBO;
--send ALTER TABLE t1 LOCK=SHARED, ADD PRIMARY KEY (f2);

--connection node_2
SET SESSION wsrep_sync_wait=0;

# Wait for the ALTER to block in sync point
--let $wait_condition = SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.PROCESSLIST WHERE STATE = 'debug sync point: now';
--source include/wait_condition.inc

SET DEBUG_SYNC= 'now SIGNAL signal.alter_locked_tables_inplace';
SET GLOBAL debug = '';

--let $wait_condition = SELECT COUNT(*) = 0 FROM INFORMATION_SCHEMA.PROCESSLIST WHERE INFO LIKE 'ALTER%';
--source include/wait_condition.inc

--connection node_1
--error 0,ER_MULTIPLE_PRI_KEY
--reap

--connection node_1a
--error 0,ER_MULTIPLE_PRI_KEY
--reap

SET SESSION wsrep_OSU_method=TOI;

DROP TABLE t1;

--connection node_2
CALL mtr.add_suppression("Slave SQL: Error 'Multiple primary key defined' on query");
CALL mtr.add_suppression("Query apply failed");

SET GLOBAL wsrep_slave_threads = 1;
