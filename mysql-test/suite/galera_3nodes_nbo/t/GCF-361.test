--source include/galera_cluster.inc

--let $galera_connection_name = node_3
--let $galera_server_number = 3
--source include/galera_connect.inc
--connection node_3
# create inconsistency
SET SESSION wsrep_on=OFF;
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY) ENGINE=InnoDB;
# block the node
FLUSH TABLES WITH READ LOCK;

--connection node_1
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES(1);
INSERT INTO t1 VALUES(2);
INSERT INTO t1 VALUES(3);

--connection node_2
--let $wait_condition = SELECT COUNT(*) = 3 FROM t1
--source include/wait_condition.inc
--sleep 1

--connection node_3
SELECT COUNT(*) = 0 FROM t1;
UNLOCK TABLES;
# Wait until the node leaves the cluster
--let $wait_condition = SELECT VARIABLE_VALUE = 'OFF' FROM performance_schema.global_status WHERE VARIABLE_NAME = 'wsrep_ready'
--source include/wait_condition.inc

--connection node_1
# Wait until node #3 leaves the cluster
--let $wait_condition = SELECT VARIABLE_VALUE = 2 FROM performance_schema.global_status WHERE VARIABLE_NAME = 'wsrep_cluster_size'
--source include/wait_condition.inc

DROP TABLE t1;

--connection node_3
SET SESSION wsrep_on = OFF;
--source include/restart_mysqld.inc
--source include/wait_until_connected_again.inc
--source include/galera_wait_ready.inc

CALL mtr.add_suppression("Slave SQL: Error 'Table 't1' already exists' on query. Default database: 'test'");
CALL mtr.add_suppression("Inconsistency detected: Inconsistent by consensus on ");
CALL mtr.add_suppression("Plugin 'InnoDB' will be forced to shutdown");
CALL mtr.add_suppression("Query apply failed");
