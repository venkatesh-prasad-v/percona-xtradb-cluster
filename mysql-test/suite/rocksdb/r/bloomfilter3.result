# restart
CREATE PROCEDURE bloom_start()
BEGIN
select sum(variable_value) into @u from performance_schema.global_status
where variable_name in (
'rocksdb_bloom_filter_prefix_useful',
'rocksdb_last_level_seek_filter_match',
'rocksdb_last_level_seek_filtered',
'rocksdb_last_level_seek_data_useful_filter_match',
'rocksdb_non_last_level_seek_filter_match',
'rocksdb_non_last_level_seek_filtered',
'rocksdb_non_last_level_seek_data_useful_filter_match');
END//
CREATE PROCEDURE bloom_eq_check()
BEGIN
select case when sum(variable_value)-@u = 0 then 'true' else 'false' end as useful from performance_schema.global_status
where variable_name in (
'rocksdb_bloom_filter_prefix_useful',
'rocksdb_last_level_seek_filter_match',
'rocksdb_last_level_seek_filtered',
'rocksdb_last_level_seek_data_useful_filter_match',
'rocksdb_non_last_level_seek_filter_match',
'rocksdb_non_last_level_seek_filtered',
'rocksdb_non_last_level_seek_data_useful_filter_match');
END//
CREATE PROCEDURE bloom_gt_check()
BEGIN
select case when sum(variable_value)-@u > 0 then 'true' else 'false' end as useful from performance_schema.global_status
where variable_name in (
'rocksdb_bloom_filter_prefix_useful',
'rocksdb_last_level_seek_filter_match',
'rocksdb_last_level_seek_filtered',
'rocksdb_last_level_seek_data_useful_filter_match',
'rocksdb_non_last_level_seek_filter_match',
'rocksdb_non_last_level_seek_filtered',
'rocksdb_non_last_level_seek_data_useful_filter_match');
END//
CREATE TABLE `linktable` (
`id1` bigint unsigned NOT NULL DEFAULT '0',
`id1_type` int unsigned NOT NULL DEFAULT '0',
`id2` bigint unsigned NOT NULL DEFAULT '0',
`id2_type` int unsigned NOT NULL DEFAULT '0',
`link_type` bigint unsigned NOT NULL DEFAULT '0',
`visibility` tinyint NOT NULL DEFAULT '0',
`data` varchar(255) NOT NULL DEFAULT '',
`time` bigint unsigned NOT NULL DEFAULT '0',
`version` int unsigned NOT NULL DEFAULT '0',
PRIMARY KEY (link_type, `id1`,`id2`) COMMENT 'cfname=cf_link_pk',
KEY `id1_type` (`id1`,`link_type`,`visibility`,`time`,`version`,`data`) COMMENT 'cfname=rev:cf_link_id1_type',
KEY `id1_type2` (`id1`,`link_type`,`time`,`version`,`data`,`visibility`) COMMENT 'cfname=rev:cf_link_id1_type2',
KEY `id1_type3` (`id1`,`visibility`,`time`,`version`,`data`,`link_type`) COMMENT 'cfname=rev:cf_link_id1_type3'
) ENGINE=ROCKSDB DEFAULT COLLATE=latin1_bin;
call bloom_start();
select id1, id2, link_type, visibility, data, time, version from linktable FORCE INDEX(`id1_type`)  where id1 = 100 and link_type = 1 and time >= 0 and time <= 9223372036854775807 and visibility = 1 order by time desc;
id1	id2	link_type	visibility	data	time	version
100	100	1	1	100	100	100
call bloom_gt_check();
useful
false
call bloom_start();
select id1, id2, link_type, visibility, data, time, version from linktable FORCE INDEX(`id1_type2`)  where id1 = 100 and link_type = 1 and time >= 0 and time <= 9223372036854775807 order by time desc;
id1	id2	link_type	visibility	data	time	version
100	100	1	1	100	100	100
call bloom_gt_check();
useful
false
call bloom_start();
select id1, id2, link_type, visibility, data, time, version from linktable FORCE INDEX(`id1_type3`)  where id1 = 100 and time >= 0 and time <= 9223372036854775807 and visibility = 1 order by time desc;
id1	id2	link_type	visibility	data	time	version
100	100	1	1	100	100	100
call bloom_eq_check();
useful
true
call bloom_start();
select id1, id2, link_type, visibility, data, time, version from linktable FORCE INDEX(`id1_type`)  where id1 = 100 and link_type = 1 and visibility = 1 and time >= 0 order by time desc;
id1	id2	link_type	visibility	data	time	version
100	100	1	1	100	100	100
call bloom_gt_check();
useful
true
call bloom_start();
select id1, id2, link_type, visibility, data, time, version from linktable FORCE INDEX(`id1_type2`)  where id1 = 100 and link_type = 1 and time >= 0 order by time desc;
id1	id2	link_type	visibility	data	time	version
100	100	1	1	100	100	100
call bloom_eq_check();
useful
true
## HA_READ_PREFIX_LAST
# BF len 20
call bloom_start();
select id1, id2, link_type, visibility, data, time, version from linktable FORCE INDEX(`id1_type`)  where id1 = 100 and link_type = 1 and visibility = 1 order by time desc;
id1	id2	link_type	visibility	data	time	version
100	100	1	1	100	100	100
call bloom_gt_check();
useful
true
# BF len 19
call bloom_start();
select id1, id2, link_type, visibility, data, time, version from linktable FORCE INDEX(`id1_type2`)  where id1 = 100 and link_type = 1 order by time desc;
id1	id2	link_type	visibility	data	time	version
100	100	1	1	100	100	100
call bloom_eq_check();
useful
true
# BF len 12
call bloom_start();
select id1, id2, link_type, visibility, data, time, version from linktable FORCE INDEX(`id1_type3`)  where id1 = 100 and visibility = 1 order by time desc;
id1	id2	link_type	visibility	data	time	version
100	100	1	1	100	100	100
call bloom_eq_check();
useful
true
DROP TABLE linktable;
# restart
#
# bloom filter prefix is 20 byte
#  Create a key which is longer than that, so that we see that  
#       eq_cond_len= slice.size() - 1;
#  doesnt work.
#
#   indexnr   4
#   kp0     + 4 =  8
#   kp1     + 8 = 16
#   kp2     + 8 = 24    24>20 byte length prefix
#   kp3     + 8 = 28
create table t1 (
pk int primary key,
kp0 int not null,
kp1 bigint not null,
kp2 bigint not null,
kp3 bigint not null,
key kp12(kp0, kp1, kp2, kp3) comment 'cfname=rev:x1'
) engine=rocksdb;
insert into t1 values (1, 1,1,         1,1);
insert into t1 values (10,1,1,0x12FFFFFFFFFF,1);
insert into t1 values (11,1,1,0x12FFFFFFFFFF,1);
insert into t1 values (20,2,2,0x12FFFFFFFFFF,1);
insert into t1 values (21,2,2,0x12FFFFFFFFFF,1);
# restart
explain 
select * from t1 where kp0=1 and kp1=1 and kp2=0x12FFFFFFFFFF order by kp3 desc;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	kp12	kp12	20	const,const,const	#	100.00	Using where; Backward index scan; Using index
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`pk` AS `pk`,`test`.`t1`.`kp0` AS `kp0`,`test`.`t1`.`kp1` AS `kp1`,`test`.`t1`.`kp2` AS `kp2`,`test`.`t1`.`kp3` AS `kp3` from `test`.`t1` where ((`test`.`t1`.`kp2` = 20890720927743) and (`test`.`t1`.`kp1` = 1) and (`test`.`t1`.`kp0` = 1)) order by `test`.`t1`.`kp3` desc
call bloom_start();
select * from t1 where kp0=1 and kp1=1 and kp2=0x12FFFFFFFFFF order by kp3 desc;
pk	kp0	kp1	kp2	kp3
11	1	1	20890720927743	1
10	1	1	20890720927743	1
# The following MUST show TRUE:
call bloom_gt_check();
useful
true
drop table t1;
DROP PROCEDURE bloom_start;
DROP PROCEDURE bloom_eq_check;
DROP PROCEDURE bloom_gt_check;
