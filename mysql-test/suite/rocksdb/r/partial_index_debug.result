set debug_sync='reset';
CREATE TABLE t (c1 int NOT NULL,
c2 int NOT NULL,
c3 int NOT NULL,
c4 int DEFAULT NULL,
c5 int DEFAULT NULL,
PRIMARY KEY (c1,c2,c3),
KEY c1 (c1,c2) COMMENT 'partial_group_keyparts=2;partial_group_threshold=3'
) ENGINE=ROCKSDB;
INSERT INTO t VALUES (1, 1, 1, 1, 1);
INSERT INTO t VALUES (1, 2, 1, 1, 1);
INSERT INTO t VALUES (1, 2, 2, 1, 1);
INSERT INTO t VALUES (1, 3, 1, 1, 1);
INSERT INTO t VALUES (1, 3, 2, 1, 1);
INSERT INTO t VALUES (1, 3, 3, 1, 1);
INSERT INTO t VALUES (1, 4, 1, 1, 1);
INSERT INTO t VALUES (1, 4, 2, 1, 1);
INSERT INTO t VALUES (1, 4, 3, 1, 1);
INSERT INTO t VALUES (1, 4, 4, 1, 1);
CREATE TEMPORARY TABLE t1 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
set debug_sync='rocksdb.partial_index_exceed_threshold SIGNAL parked WAIT_FOR go';
SELECT c1, c2 FROM t FORCE INDEX(c1) WHERE c1 = 1 AND c2 = 4;
set debug_sync='now WAIT_FOR parked';
set debug_sync='now SIGNAL go';
ERROR 70100: Query execution was interrupted
CREATE TEMPORARY TABLE t2 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
SELECT variable_name, t2.variable_value - t1.variable_value AS diff FROM t1 JOIN t2 USING (variable_name);
variable_name	diff
rocksdb_partial_index_groups_materialized	1
rocksdb_partial_index_groups_sorted	0
rocksdb_partial_index_rows_materialized	4
rocksdb_partial_index_rows_sorted	0
include/assert.inc [Check that materialized groups are non-zero.]
include/assert.inc [Check that materialized rows are non-zero.]
DROP TABLE t, t1, t2;
set debug_sync='reset';
set global rocksdb_partial_index_ignore_killed = false;
CREATE TABLE t (c1 int NOT NULL,
c2 int NOT NULL,
c3 int NOT NULL,
c4 int DEFAULT NULL,
c5 int DEFAULT NULL,
PRIMARY KEY (c1,c2,c3),
KEY c1 (c1,c2) COMMENT 'partial_group_keyparts=2;partial_group_threshold=3'
) ENGINE=ROCKSDB;
INSERT INTO t VALUES (1, 1, 1, 1, 1);
INSERT INTO t VALUES (1, 2, 1, 1, 1);
INSERT INTO t VALUES (1, 2, 2, 1, 1);
INSERT INTO t VALUES (1, 3, 1, 1, 1);
INSERT INTO t VALUES (1, 3, 2, 1, 1);
INSERT INTO t VALUES (1, 3, 3, 1, 1);
INSERT INTO t VALUES (1, 4, 1, 1, 1);
INSERT INTO t VALUES (1, 4, 2, 1, 1);
INSERT INTO t VALUES (1, 4, 3, 1, 1);
INSERT INTO t VALUES (1, 4, 4, 1, 1);
CREATE TEMPORARY TABLE t1 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
set debug_sync='rocksdb.partial_index_exceed_threshold SIGNAL parked WAIT_FOR go';
SELECT c1, c2 FROM t FORCE INDEX(c1) WHERE c1 = 1 AND c2 = 4;
set debug_sync='now WAIT_FOR parked';
set debug_sync='now SIGNAL go';
ERROR 70100: Query execution was interrupted
CREATE TEMPORARY TABLE t2 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';
SELECT variable_name, t2.variable_value - t1.variable_value AS diff FROM t1 JOIN t2 USING (variable_name);
variable_name	diff
rocksdb_partial_index_groups_materialized	0
rocksdb_partial_index_groups_sorted	0
rocksdb_partial_index_rows_materialized	0
rocksdb_partial_index_rows_sorted	0
include/assert.inc [Check that materialized groups are zero.]
include/assert.inc [Check that materialized rows are zero.]
DROP TABLE t, t1, t2;
set debug_sync='RESET';
set global rocksdb_partial_index_ignore_killed = DEFAULT;
