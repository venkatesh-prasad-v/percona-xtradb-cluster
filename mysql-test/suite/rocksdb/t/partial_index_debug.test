--source include/have_rocksdb.inc
--source include/have_debug.inc
--source include/have_debug_sync.inc

--source include/count_sessions.inc

--let i=0
while ($i<= 1) {
set debug_sync='reset';

if ($i == 1) {
  set global rocksdb_partial_index_ignore_killed = false;
}

CREATE TABLE t (c1 int NOT NULL,
  c2 int NOT NULL,
  c3 int NOT NULL,
  c4 int DEFAULT NULL,
  c5 int DEFAULT NULL,
  PRIMARY KEY (c1,c2,c3),
  KEY c1 (c1,c2) COMMENT 'partial_group_keyparts=2;partial_group_threshold=3'
) ENGINE=ROCKSDB;

INSERT INTO t VALUES (1, 1, 1, 1, 1);
INSERT INTO t VALUES (1, 2, 1, 1, 1);
INSERT INTO t VALUES (1, 2, 2, 1, 1);
INSERT INTO t VALUES (1, 3, 1, 1, 1);
INSERT INTO t VALUES (1, 3, 2, 1, 1);
INSERT INTO t VALUES (1, 3, 3, 1, 1);
INSERT INTO t VALUES (1, 4, 1, 1, 1);
INSERT INTO t VALUES (1, 4, 2, 1, 1);
INSERT INTO t VALUES (1, 4, 3, 1, 1);
INSERT INTO t VALUES (1, 4, 4, 1, 1);

CREATE TEMPORARY TABLE t1 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';

connect (con1, localhost, root,,);
--let $conn_id = `SELECT CONNECTION_ID()`
set debug_sync='rocksdb.partial_index_exceed_threshold SIGNAL parked WAIT_FOR go';
send SELECT c1, c2 FROM t FORCE INDEX(c1) WHERE c1 = 1 AND c2 = 4;

connection default;
set debug_sync='now WAIT_FOR parked';
--disable_query_log
eval KILL QUERY $conn_id;
--enable_query_log
set debug_sync='now SIGNAL go';

connection con1;
--error ER_QUERY_INTERRUPTED
reap;

connection default;
CREATE TEMPORARY TABLE t2 AS
SELECT * FROM performance_schema.global_status
WHERE variable_name LIKE 'rocksdb_partial_index%';

if ($i == 0) {
SELECT variable_name, t2.variable_value - t1.variable_value AS diff FROM t1 JOIN t2 USING (variable_name);
--let $assert_text = Check that materialized groups are non-zero.
--let $assert_cond = [SELECT t2.variable_value - t1.variable_value AS diff FROM t1 JOIN t2 USING (variable_name) WHERE variable_name = "rocksdb_partial_index_groups_materialized", diff, 1] = 1
--source include/assert.inc
--let $assert_text = Check that materialized rows are non-zero.
--let $assert_cond = [SELECT t2.variable_value - t1.variable_value AS diff FROM t1 JOIN t2 USING (variable_name) WHERE variable_name = "rocksdb_partial_index_rows_materialized", diff, 1] = 4
--source include/assert.inc
}

if ($i == 1) {
SELECT variable_name, t2.variable_value - t1.variable_value AS diff FROM t1 JOIN t2 USING (variable_name);
--let $assert_text = Check that materialized groups are zero.
--let $assert_cond = [SELECT t2.variable_value - t1.variable_value AS diff FROM t1 JOIN t2 USING (variable_name) WHERE variable_name = "rocksdb_partial_index_groups_materialized", diff, 1] = 0
--source include/assert.inc
--let $assert_text = Check that materialized rows are zero.
--let $assert_cond = [SELECT t2.variable_value - t1.variable_value AS diff FROM t1 JOIN t2 USING (variable_name) WHERE variable_name = "rocksdb_partial_index_rows_materialized", diff, 1] = 0
--source include/assert.inc
}

DROP TABLE t, t1, t2;

disconnect con1;
inc $i;

}

set debug_sync='RESET';
set global rocksdb_partial_index_ignore_killed = DEFAULT;
--source include/wait_until_count_sessions.inc
