CALL mtr.add_suppression(".*State transfer to .* failed: Operation canceled.*");
CALL mtr.add_suppression(".*SST request is null, SST canceled.*");
CALL mtr.add_suppression(".*State transfer to .* failed: Operation canceled.*");
CALL mtr.add_suppression(".*SST request is null, SST canceled.*");
CREATE TABLE t1 (a INT PRIMARY KEY);
INSERT INTO t1 VALUES (1);
INSERT INTO t1 VALUES (2);
INSERT INTO t1 VALUES (3);
INSERT INTO t1 VALUES (4);
# restart:<hidden args>
include/assert.inc [Table t1 should have 4 rows]
include/assert_grep.inc [Assert that node_2 joined without SST]
INSERT INTO t1 VALUES (5);
INSERT INTO t1 VALUES (6);
INSERT INTO t1 VALUES (7);
include/wait_for_wait_in_expect_file.inc
# restart_abort: <hidden args>
include/wait_for_wait_in_expect_file.inc
# restart:<hidden args>
include/assert.inc [Table t1 still should have 4 rows]
include/assert_grep.inc [Assert that node_2 failed to join without SST]
# restart:<hidden args>
include/assert.inc [Table t1 should have 7 rows]
INSERT INTO t1 VALUES (8);
INSERT INTO t1 VALUES (9);
INSERT INTO t1 VALUES (10);
# restart:<hidden args>
SET GLOBAL wsrep_desync=1;
include/wait_for_wait_in_expect_file.inc
# restart_abort: <hidden args>
include/wait_for_wait_in_expect_file.inc
# restart:<hidden args>
include/assert_grep.inc [Assert that node_2 failed to join without SST]
include/assert.inc [Table t1 should have 10 rows]
include/assert.inc [test2 DB should have 200 tables]
SET GLOBAL wsrep_desync=0;
# restart:<hidden args>
DROP TABLE t1;
DROP DATABASE test2;
