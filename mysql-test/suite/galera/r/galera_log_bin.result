RESET BINARY LOGS AND GTIDS;
RESET BINARY LOGS AND GTIDS;
CREATE TABLE t1 (id INT PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);
CREATE TABLE t2 (id INT) ENGINE=InnoDB;
INSERT INTO t2 VALUES (1);
INSERT INTO t2 VALUES (1);
SELECT COUNT(*) = 1 FROM t1;
COUNT(*) = 1
1
SELECT COUNT(*) = 2 FROM t2;
COUNT(*) = 2
1
ALTER TABLE t1 ADD COLUMN f2 INTEGER;
FLUSH LOGS;
include/rpl/deprecated/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
mysqld-bin.000002	#	Previous_gtids	#	#	
SELECT COUNT(*) = 2 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 't1';
COUNT(*) = 2
1
include/rpl/deprecated/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
mysqld-bin.000001	#	Previous_gtids	#	#	
mysqld-bin.000001	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
mysqld-bin.000001	#	Query	#	#	use `test`; CREATE TABLE t1 (id INT PRIMARY KEY) ENGINE=InnoDB
mysqld-bin.000001	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
mysqld-bin.000001	#	Query	#	#	BEGIN
mysqld-bin.000001	#	Table_map	#	#	table_id: # (test.t1)
mysqld-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
mysqld-bin.000001	#	Xid	#	#	COMMIT /* XID */
mysqld-bin.000001	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
mysqld-bin.000001	#	Query	#	#	use `test`; CREATE TABLE t2 (id INT) ENGINE=InnoDB
mysqld-bin.000001	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
mysqld-bin.000001	#	Query	#	#	BEGIN
mysqld-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
mysqld-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
mysqld-bin.000001	#	Xid	#	#	COMMIT /* XID */
mysqld-bin.000001	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
mysqld-bin.000001	#	Query	#	#	BEGIN
mysqld-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
mysqld-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
mysqld-bin.000001	#	Xid	#	#	COMMIT /* XID */
mysqld-bin.000001	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
mysqld-bin.000001	#	Query	#	#	use `test`; ALTER TABLE t1 ADD COLUMN f2 INTEGER
DROP TABLE t1;
DROP TABLE t2;
#
# Test that disabling binlog does not prevent Galera replication,
# but events are not recorded in the binlog
#
RESET BINARY LOGS AND GTIDS;
RESET BINARY LOGS AND GTIDS;
SET SESSION sql_log_bin = OFF;
CREATE TABLE t1 (a int primary key);
INSERT INTO t1 VALUES (1);
BEGIN;
INSERT INTO t1 VALUES (10);
INSERT INTO t1 VALUES (11);
INSERT INTO t1 VALUES (12);
COMMIT;
include/assert.inc [assert that the above events are not written to binlog]
SET SESSION sql_log_bin = ON;
CREATE TABLE t2 (a int primary key);
INSERT INTO t2 VALUES (1);
BEGIN;
INSERT INTO t2 VALUES (10);
INSERT INTO t2 VALUES (11);
INSERT INTO t2 VALUES (12);
COMMIT;
include/rpl/deprecated/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
mysqld-bin.000001	#	Previous_gtids	#	#	
mysqld-bin.000001	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
mysqld-bin.000001	#	Query	#	#	use `test`; CREATE TABLE t2 (a int primary key)
mysqld-bin.000001	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
mysqld-bin.000001	#	Query	#	#	BEGIN
mysqld-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
mysqld-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
mysqld-bin.000001	#	Xid	#	#	COMMIT /* XID */
mysqld-bin.000001	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
mysqld-bin.000001	#	Query	#	#	BEGIN
mysqld-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
mysqld-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
mysqld-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
mysqld-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
mysqld-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
mysqld-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
mysqld-bin.000001	#	Xid	#	#	COMMIT /* XID */
include/rpl/deprecated/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
mysqld-bin.000001	#	Previous_gtids	#	#	
mysqld-bin.000001	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
mysqld-bin.000001	#	Query	#	#	use `test`; CREATE TABLE t2 (a int primary key)
mysqld-bin.000001	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
mysqld-bin.000001	#	Query	#	#	BEGIN
mysqld-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
mysqld-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
mysqld-bin.000001	#	Xid	#	#	COMMIT /* XID */
mysqld-bin.000001	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
mysqld-bin.000001	#	Query	#	#	BEGIN
mysqld-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
mysqld-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
mysqld-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
mysqld-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
mysqld-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
mysqld-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
mysqld-bin.000001	#	Xid	#	#	COMMIT /* XID */
DROP TABLE t1;
DROP TABLE t2;
#
# The same, but for streaming replication
#
RESET BINARY LOGS AND GTIDS;
RESET BINARY LOGS AND GTIDS;
SET SESSION sql_log_bin = OFF;
SET SESSION wsrep_trx_fragment_size = 1;
CREATE TABLE t1 (a int primary key);
BEGIN;
INSERT INTO t1 VALUES (1);
INSERT INTO t1 VALUES (2);
INSERT INTO t1 VALUES (3);
COMMIT;
include/assert.inc [assert that the above events are not written to binlog]
SET SESSION sql_log_bin = ON;
CREATE TABLE t2 (a int primary key);
BEGIN;
INSERT INTO t2 VALUES (1);
INSERT INTO t2 VALUES (2);
INSERT INTO t2 VALUES (3);
COMMIT;
include/rpl/deprecated/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
mysqld-bin.000001	#	Previous_gtids	#	#	
mysqld-bin.000001	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
mysqld-bin.000001	#	Query	#	#	use `test`; CREATE TABLE t2 (a int primary key)
mysqld-bin.000001	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
mysqld-bin.000001	#	Query	#	#	BEGIN
mysqld-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
mysqld-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
mysqld-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
mysqld-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
mysqld-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
mysqld-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
mysqld-bin.000001	#	Xid	#	#	COMMIT /* XID */
include/rpl/deprecated/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
mysqld-bin.000001	#	Previous_gtids	#	#	
mysqld-bin.000001	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
mysqld-bin.000001	#	Query	#	#	use `test`; CREATE TABLE t2 (a int primary key)
mysqld-bin.000001	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
mysqld-bin.000001	#	Query	#	#	BEGIN
mysqld-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
mysqld-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
mysqld-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
mysqld-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
mysqld-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
mysqld-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
mysqld-bin.000001	#	Xid	#	#	COMMIT /* XID */
DROP TABLE t1;
DROP TABLE t2;
#
# Check that log-replica-updates=OFF block all PXC replicated binlogging on node_2
#
# restart:--log-replica-updates=OFF --log-bin
RESET BINARY LOGS AND GTIDS;
RESET BINARY LOGS AND GTIDS;
SET SESSION sql_log_bin = OFF;
CREATE TABLE t1 (a int primary key);
INSERT INTO t1 VALUES (1);
SET SESSION sql_log_bin = ON;
CREATE TABLE t2 (a int primary key);
INSERT INTO t2 VALUES (1);
include/rpl/deprecated/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
mysqld-bin.000001	#	Previous_gtids	#	#	
mysqld-bin.000001	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
mysqld-bin.000001	#	Query	#	#	use `test`; CREATE TABLE t2 (a int primary key)
mysqld-bin.000001	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
mysqld-bin.000001	#	Query	#	#	BEGIN
mysqld-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
mysqld-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
mysqld-bin.000001	#	Xid	#	#	COMMIT /* XID */
include/assert.inc [assert that the above events are not written to binlog]
include/rpl/deprecated/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
mysqld-bin.000001	#	Previous_gtids	#	#	
DROP TABLE t1;
DROP TABLE t2;
RESET BINARY LOGS AND GTIDS;
